{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/MERN/client/src/components/post/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      className: \"btn\",\n      children: \"Back To Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      showActions: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","Spinner","getPost","PostItem","CommentForm","Post","post","loading","match","params","id","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACH,EAAAA,OAAD;AAAUI,EAAAA,IAAI,EAAE;AAACA,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAhB;AAAiCC,EAAAA;AAAjC,CAAD,KAA8C;AAAA;;AACvDX,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACH,GAFQ,EAEN,CAACR,OAAD,CAFM,CAAT;AAKA,SAAOK,OAAO,IAAID,IAAI,KAAK,IAApB,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,gBAGH,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACK;AAA1B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAWH,CAjBD;;GAAMN,I;;KAAAA,I;AAmBNA,IAAI,CAACO,SAAL,GAAiB;AACbV,EAAAA,OAAO,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADX;AAEbR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD;AAFV,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,IAAI,EAAEW,KAAK,CAACX;AADkB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACiB,eAAD,EAAkB;AAACd,EAAAA;AAAD,CAAlB,CAAP,CAAoCG,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\n\nconst Post = ({getPost, post: {post, loading}, match }) => {\n    useEffect(() => {\n        getPost(match.params.id)\n    }, [getPost]);\n\n\n    return loading || post === null ? (\n        <Spinner />\n    ) : ( \n        <Fragment>\n            <Link to=\"/posts\" className=\"btn\">\n                Back To Posts\n            </Link>\n            <PostItem post={post} showActions={false} />\n            <CommentForm postId={post._id} />\n        </Fragment>\n    )\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}