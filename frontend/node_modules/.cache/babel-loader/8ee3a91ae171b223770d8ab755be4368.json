{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/MERN/client/src/components/profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 31\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferre\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  repos: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","_id","propTypes","func","isRequired","string","array","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWF,EAAAA,cAAX;AAA2BG,EAAAA;AAA3B,CAAD,KAAuC;AAAA;;AACzDP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACH,GAFQ,EAEP,CAAEF,cAAF,CAFO,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,KAAK,KAAK,IAAV,gBAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAjB,GACGA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACV;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA,8BACI;AAAA,gCACI;AAAA,iCACI;AACI,YAAA,IAAI,EAAEA,IAAI,CAACC,QADf;AAEI,YAAA,MAAM,EAAC,QAFX;AAGI,YAAA,GAAG,EAAC,oBAHR;AAAA,sBAKKD,IAAI,CAACE;AALV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAA,+BACI;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,kCACYH,IAAI,CAACI,gBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA,OAAUJ,IAAI,CAACK,GAAf;AAAA;AAAA;AAAA;AAAA,YADJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAnCD;;GAAMT,a;;KAAAA,a;AAqCNA,aAAa,CAACU,SAAd,GAA0B;AACtBX,EAAAA,cAAc,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADT;AAEtBX,EAAAA,QAAQ,EAAEL,SAAS,CAACiB,MAAV,CAAiBD,UAFL;AAGtBV,EAAAA,KAAK,EAAEN,SAAS,CAACkB,KAAV,CAAgBF;AAHD,CAA1B;;AAMA,MAAMG,eAAe,GAAEC,KAAK,KAAK;AAC7Bd,EAAAA,KAAK,EAAEc,KAAK,CAACC,OAAN,CAAcf;AADQ,CAAL,CAA5B;;AAIA,eAAeL,OAAO,CAACkB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,aAA3C,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({username, getGithubRepos, repos}) => {\n    useEffect(() => {\n        getGithubRepos(username)\n    },[ getGithubRepos]);\n\n    return (\n        <div className=\"profile-github\">\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\n            {repos === null ? <Spinner /> : (\n                repos.map(repo => (\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n                        <div>\n                            <h4>\n                                <a \n                                    href={repo.html_url} \n                                    target='_blank'\n                                    rel='noopener noreferre'\n                                >\n                                    {repo.name}\n                                </a>\n                            </h4>\n                            <p>{repo.description}</p>\n                        </div>\n                        <div>\n                            <ul>\n                                <li className=\"badge badge-primary\">\n                                    Stars: {repo.stargazers_count}\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                ))\n            )}\n        </div>\n    )\n}\n\nProfileGithub.propTypes = {\n    getGithubRepos: PropTypes.func.isRequired,\n    username: PropTypes.string.isRequired,\n    repos: PropTypes.array.isRequired\n};\n\nconst mapStateToProps =state => ({\n    repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub)\n"]},"metadata":{},"sourceType":"module"}