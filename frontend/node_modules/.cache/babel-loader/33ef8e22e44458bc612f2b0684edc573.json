{"ast":null,"code":"import React,{useEffect,Fragment}from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import{getProfileById}from'../../actions/profile';import Spinner from'../layout/Spinner';import ProfileTop from'./ProfileTop';import ProfileAbout from'./ProfileAbout';import ProfileExperience from'./ProfileExperience';import ProfileEducation from'./ProfileEducation';import ProfileGithub from'./ProfileGithub';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(_ref){var getProfileById=_ref.getProfileById,_ref$profile=_ref.profile,profile=_ref$profile.profile,loading=_ref$profile.loading,auth=_ref.auth,match=_ref.match;useEffect(function(){getProfileById(match.params.id);},[getProfileById,match.params.id]);return/*#__PURE__*/_jsx(Fragment,{children:profile===null||loading?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/profiles\",className:\"btn btn-light\",children:\"Back To Profiles\"}),auth.isAuthenticated&&auth.loading===false&&auth.user._id===profile.user._id&&/*#__PURE__*/_jsx(Link,{to:\"/edit-profile\",className:\"btn btn-dark\",children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-grid my-1\",children:[/*#__PURE__*/_jsx(ProfileTop,{profile:profile}),/*#__PURE__*/_jsx(ProfileAbout,{profile:profile}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-exp bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Experience\"}),profile.experience.length>0?/*#__PURE__*/_jsx(Fragment,{children:profile.experience.map(function(exp){return/*#__PURE__*/_jsx(ProfileExperience,{experience:exp},exp._id);})}):/*#__PURE__*/_jsx(\"h4\",{children:\"No experience credetials\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-edu bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:\"Education\"}),profile.education.length>0?/*#__PURE__*/_jsx(Fragment,{children:profile.education.map(function(edu){return/*#__PURE__*/_jsx(ProfileEducation,{education:edu},edu._id);})}):/*#__PURE__*/_jsx(\"h4\",{children:\"No education credetials\"})]}),profile.githubusername&&/*#__PURE__*/_jsx(ProfileGithub,{username:profile.githubusername})]})]})});};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile,auth:state.auth};};export default connect(mapStateToProps,{getProfileById:getProfileById})(Profile);","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/profile/Profile.js"],"names":["React","useEffect","Fragment","connect","Link","getProfileById","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","exp","education","edu","githubusername","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\n\n\nconst Profile = ({\n    getProfileById,\n    profile: {profile, loading},\n    auth,\n    match\n}) => {\n    useEffect(()=>{\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n\n\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner /> : \n            <Fragment>\n                <Link to=\"/profiles\" className=\"btn btn-light\">\n                    Back To Profiles\n                </Link>\n                {auth.isAuthenticated && auth.loading === false && \n                    auth.user._id === profile.user._id &&(\n                        <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                            Edit Profile\n                        </Link>\n                    )}\n                    <div class=\"profile-grid my-1\">\n                        <ProfileTop profile={profile} />\n                        <ProfileAbout profile={profile} />\n                        <div className=\"profile-exp bg-white p-2\">\n                            <h2 className=\"text-primary\">Experience</h2>\n                            {profile.experience.length > 0 ? (<Fragment>\n                            {profile.experience.map(exp => (\n                                <ProfileExperience \n                                    key={exp._id} \n                                    experience={exp} />\n                            ))}\n                            </Fragment>) : (<h4>No experience credetials</h4>)}\n                        </div>\n\n                        <div className=\"profile-edu bg-white p-2\">\n                            <h2 className=\"text-primary\">Education</h2>\n                            {profile.education.length > 0 ? (<Fragment>\n                            {profile.education.map(edu => (\n                                <ProfileEducation \n                                    key={edu._id} \n                                    education={edu} />\n                            ))}\n                            </Fragment>) : (<h4>No education credetials</h4>)}\n                        </div>\n\n                        {profile.githubusername && (\n                            <ProfileGithub username={profile.githubusername} />\n                        )}\n                    </div>\n\n                    \n            </Fragment>\n        }\n        </Fragment>)\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfileById})(Profile);\n"]},"metadata":{},"sourceType":"module"}