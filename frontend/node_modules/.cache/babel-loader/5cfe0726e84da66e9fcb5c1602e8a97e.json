{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/MERN/client/src/components/auth/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log('SUCCESS!');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this), \" Sign Into Your Account\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: e => onChange(e),\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"nxMXPYodxx8dhrzbW2gDegWVV4k=\");\n\n_c = Login;\nLogin.PropTypes = {\n  login: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/auth/Login.js"],"names":["React","Fragment","useState","Link","connect","PropTypes","login","Login","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","console","log","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {login} from '../../actions/auth';\n\nexport const Login = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password} = formData; \n\n    const onChange = (e) => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n\n    const onSubmit = async e =>  {\n        e.preventDefault();\n        console.log('SUCCESS!');\n       \n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign In</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email Address\" \n                        name=\"email\"\n                        value={email} \n                        onChange={e => onChange(e)}\n                        required\n                     />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password} \n                        onChange={e => onChange(e)}\n                        minLength=\"6\"\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n            <p className=\"my-1\">\n                Don't have an account? <Link to=\"/register\">Sign Up</Link>\n            </p>\n        </Fragment>\n    )\n};\n\nLogin.PropTypes = {\n    login: PropTypes.func.isRequired\n}\n\nexport default connect(null, {login})(Login);\n"]},"metadata":{},"sourceType":"module"}