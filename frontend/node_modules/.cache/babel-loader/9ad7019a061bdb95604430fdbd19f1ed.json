{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/MERN/client/src/components/post/CommentItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `profile/${user}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"round-img\",\n        src: avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"post-date\",\n      children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"YYYY/MM/DD\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => deletePost()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 9\n}, this);\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  deleteComment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/post/CommentItem.js"],"names":["React","Fragment","PropTypes","Link","connect","Moment","deleteComment","CommentItem","postId","comment","_id","text","name","avatar","user","date","auth","loading","e","deletePost","propTypes","func","isRequired","object","number","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,MADiB;AAEjBC,EAAAA,OAAO,EAAE;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,GAFQ;AAGjBC,EAAAA,IAHiB;AAIjBV,EAAAA;AAJiB,CAAD,kBAKZ;AAAK,EAAA,KAAK,EAAC,wBAAX;AAAA,0BACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUQ,IAAK,EAA1B;AAAA,8BACI;AACI,QAAA,KAAK,EAAC,WADV;AAEI,QAAA,GAAG,EAAED,MAFT;AAGI,QAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,eAWI;AAAA,4BACI;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA,gBAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA,4CACc,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,YAAf;AAAA,kBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,cADd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKK,CAACC,IAAI,CAACC,OAAN,IAAiBH,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,iBACG;AAAQ,MAAA,OAAO,EAAEQ,CAAC,IAAIC,UAAU;AAAhC;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,QALR;;KAAMZ,W;AA6BNA,WAAW,CAACa,SAAZ,GAAwB;AACpBd,EAAAA,aAAa,EAAEJ,SAAS,CAACmB,IAAV,CAAeC,UADV;AAEpBN,EAAAA,IAAI,EAAEd,SAAS,CAACqB,MAAV,CAAiBD,UAFH;AAGpBd,EAAAA,MAAM,EAAEN,SAAS,CAACsB,MAAV,CAAiBF,UAHL;AAIpBb,EAAAA,OAAO,EAAEP,SAAS,CAACqB,MAAV,CAAiBD;AAJN,CAAxB;;AAOA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADkB,CAAL,CAA7B;;AAIA,eAAeZ,OAAO,CAACqB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAA0CC,WAA1C,CAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Moment from 'react-moment';\n\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n    postId,\n    comment: {_id, text, name, avatar, user, date},\n    auth,\n    deleteComment\n}) =>   <div class=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`profile/${user}`}>\n                    <img\n                        class=\"round-img\"\n                        src={avatar}\n                        alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p class=\"my-1\">{text}</p>\n                <p class=\"post-date\">\n                    Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n                </p>\n                {!auth.loading && user === auth.user._id && (\n                    <button onClick={e => deletePost()}>\n\n                    </button>\n                )}\n            </div>\n        </div>\n\nCommentItem.propTypes = {\n    deleteComment: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    postId: PropTypes.number.isRequired,\n    comment: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);\n"]},"metadata":{},"sourceType":"module"}