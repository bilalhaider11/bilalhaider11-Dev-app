{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from './alert';\nimport { POST_ERROR, GET_POSTS, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from \"./types\"; //Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.message,\n        status: error.response.status\n      }\n    });\n  }\n}; //Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.message,\n        status: error.response.status\n      }\n    });\n  }\n}; //Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.message,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.message,\n        status: error.response.status\n      }\n    });\n  }\n}; //Add post\n\nexport const addPost = formDate => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/posts', formDate, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Added!', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.message,\n        status: error.response.status\n      }\n    });\n  }\n}; //Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.message,\n        status: error.response.status\n      }\n    });\n  }\n}; //Add Comment\n\nexport const addComment = (postId, formDate) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/posts/comment/${postId}`, formDate, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added!', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.message,\n        status: error.response.status\n      }\n    });\n  }\n}; //Delete Comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment Removed!', 'success'));\n  } catch (error) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/aht/Desktop/Dev-app-frontend/src/actions/post.js"],"names":["axios","setAlert","POST_ERROR","GET_POSTS","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","error","msg","response","message","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formDate","config","headers","post","getPost","addComment","postId","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {setAlert} from './alert';\n\nimport { \n    POST_ERROR, \n    GET_POSTS, \n    UPDATE_LIKES,\n    DELETE_POST,\n    ADD_POST,\n    GET_POST,\n    ADD_COMMENT,\n    REMOVE_COMMENT\n} from \"./types\";\n\n//Get posts\n\nexport const getPosts = () => async dispatch => {\n    try {\n        const res = await axios.get('/posts');\n        \n        dispatch({\n            type: GET_POSTS,\n            payload: res.data\n        })\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.message,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n//Add like\n\nexport const addLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/posts/like/${id}`);\n        \n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        })\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.message,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n//Remove like\n\nexport const removeLike = (id) => async dispatch => {\n    try {\n        const res = await axios.put(`/posts/unlike/${id}`);\n        \n        dispatch({\n            type: UPDATE_LIKES,\n            payload: {id, likes: res.data}\n        })\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.message,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Delete Post\n\nexport const deletePost = (id) => async dispatch => {\n    try {\n        await axios.delete(`/posts/${id}`);\n        \n        dispatch({\n            type: DELETE_POST,\n            payload: id\n        });\n\n        dispatch(setAlert('Post Removed', 'success'));\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.message,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n//Add post\n\nexport const addPost = formDate => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post('/posts', formDate, config);\n        \n        dispatch({\n            type: ADD_POST,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Post Added!', 'success'));\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.message,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n\n//Get post\n\nexport const getPost = id => async dispatch => {\n    try {\n        const res = await axios.get(`/posts/${id}`);\n        \n        dispatch({\n            type: GET_POST,\n            payload: res.data\n        })\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.message,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n//Add Comment\n\nexport const addComment = (postId, formDate) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    try {\n        const res = await axios.post(`/posts/comment/${postId}`, formDate, config);\n        \n        dispatch({\n            type: ADD_COMMENT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Comment Added!', 'success'));\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.message,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n//Delete Comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => { \n    try {\n        await axios.delete(`/posts/comment/${postId}/${commentId}`);\n        \n        dispatch({\n            type: REMOVE_COMMENT,\n            payload: commentId\n        });\n\n        dispatch(setAlert('Comment Removed!', 'success'));\n    } \n    catch (error) {\n        dispatch({\n            type: POST_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};"]},"metadata":{},"sourceType":"module"}