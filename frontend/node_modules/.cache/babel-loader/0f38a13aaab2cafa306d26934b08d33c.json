{"ast":null,"code":"import { ADD_COMMENT, ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, REMOVE_COMMENT, UPDATE_LIKES } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nconst post = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.id ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: state.post.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default post;","map":{"version":3,"sources":["/home/aht/Desktop/Dev-app-frontend/src/reducers/post.js"],"names":["ADD_COMMENT","ADD_POST","DELETE_POST","GET_POST","GET_POSTS","POST_ERROR","REMOVE_COMMENT","UPDATE_LIKES","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"AAAA,SACIA,WADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,SALJ,EAMIC,UANJ,EAOIC,cAPJ,EAQIC,YARJ,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;;AAOA,MAAMF,IAAI,GAAI,CAACG,KAAK,GAACL,YAAP,EAAqBM,MAArB,KAAgC;AAC1C,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBF,MAAxB;;AAEA,UAAQC,IAAR;AACI,SAAKX,SAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHJ,QAAAA,KAAK,EAAEO,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKR,QAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,IAAI,EAAEM,OAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKV,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,KAAK,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFJ;AAGHE,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKT,WAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmBP,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAxC,CAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKN,UAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHD,QAAAA,KAAK,EAAEI,OAFJ;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKJ,YAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgBT,IAAI,IAAIA,IAAI,CAACQ,GAAL,KAAaF,OAAO,CAACI,EAArB,GAA0B,EACrD,GAAGV,IADkD;AAErDW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAFsC,SAA1B,GAEFX,IAFtB,CAFJ;AAMHC,QAAAA,OAAO,EAAE;AANN,OAAP;;AAQJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHH,QAAAA,IAAI,EAAE,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAgBY,UAAAA,QAAQ,EAAEN;AAA1B,SAFH;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKL,cAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHH,QAAAA,IAAI,EAAE,EACF,GAAGG,KAAK,CAACH,IADP;AAEFY,UAAAA,QAAQ,EAAET,KAAK,CAACH,IAAN,CAAWY,QAAX,CAAoBL,MAApB,CACNM,OAAO,IAAIA,OAAO,CAACL,GAAR,KAAgBF,OADrB;AAFR,SAFH;AAQHL,QAAAA,OAAO,EAAE;AARN,OAAP;;AAUJ;AACI,aAAOE,KAAP;AA1DR;AA4DH,CA/DD;;AAiEA,eAAeH,IAAf","sourcesContent":["import {\n    ADD_COMMENT,\n    ADD_POST,\n    DELETE_POST,\n    GET_POST,\n    GET_POSTS,\n    POST_ERROR,\n    REMOVE_COMMENT,\n    UPDATE_LIKES\n} from '../actions/types';\n\nconst initialState = {\n    posts: [],\n    post: null,\n    loading: true,\n    error: {}\n};\n\nconst post =  (state=initialState, action) => {\n    const {type, payload} = action;\n\n    switch (type) {\n        case GET_POSTS:\n            return {\n                ...state,\n                posts: payload,\n                loading: false\n            };\n        case GET_POST:\n            return {\n                ...state,\n                post: payload,\n                loading: false  \n            }\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [payload, ...state.posts],\n                loading: false\n            }\n        case DELETE_POST:\n            return {\n                ...state,\n                posts: state.posts.filter(post => post._id !== payload),\n                loading: false\n            }\n        case POST_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        case UPDATE_LIKES:\n            return {\n                ...state,\n                posts: state.posts.map(post => post._id === payload.id ? {\n                    ...post,\n                    likes: payload.likes } : post\n                ),\n                loading: false\n            }\n        case ADD_COMMENT:\n            return {\n                ...state,\n                post: {...state.post, comments: payload},\n                loading: false\n            }\n        case REMOVE_COMMENT:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    comments: state.post.comments.filter(\n                        comment => comment._id !== payload\n                    )\n                },\n                loading: false\n            }\n        default:\n            return state;\n    }\n};\n\nexport default post;"]},"metadata":{},"sourceType":"module"}