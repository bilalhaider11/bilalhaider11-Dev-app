{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/MERN/client/src/components/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  console.log(profile);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), \" Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {\n        experience: profile.experience\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Link","Spinner","getCurrentProfile","DashboardActions","Experience","Dashboard","auth","user","profile","loading","console","log","name","experience","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfH,EAAAA,iBADe;AAEfI,EAAAA,IAAI,EAAE;AAACC,IAAAA;AAAD,GAFS;AAGfC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAHM,CAAD,KAIZ;AAAA;;AACFb,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,SAAOC,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADG,gBAEF,QAAC,QAAD;AAAA,4BACG;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAC2CD,IAAI,IAAIA,IAAI,CAACK,IADxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,EAKIJ,OAAO,KAAK,IAAZ,gBACG,QAAC,QAAD;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,OAAO,CAACK;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAMG,QAAC,QAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXP;AAAA;AAAA;AAAA;AAAA;AAAA,UAFL;AAoBH,CA9BD;;GAAMR,S;;KAAAA,S;AAgCNA,SAAS,CAACS,SAAV,GAAsB;AAClBZ,EAAAA,iBAAiB,EAAEJ,SAAS,CAACiB,IAAV,CAAeC,UADhB;AAElBV,EAAAA,IAAI,EAAER,SAAS,CAACmB,MAAV,CAAiBD,UAFL;AAGlBR,EAAAA,OAAO,EAAEV,SAAS,CAACmB,MAAV,CAAiBD;AAHR,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9Bb,EAAAA,IAAI,EAAEa,KAAK,CAACb,IADkB;AAE9BE,EAAAA,OAAO,EAAEW,KAAK,CAACX;AAFe,CAAL,CAA7B;;AAKA,eAAeT,OAAO,CAACmB,eAAD,EAAkB;AAAChB,EAAAA;AAAD,CAAlB,CAAP,CAA8CG,SAA9C,CAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../layout/Spinner';\nimport {getCurrentProfile} from '../../actions/profile';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\n\nconst Dashboard = ({\n    getCurrentProfile, \n    auth: {user}, \n    profile: {profile, loading}\n}) => {\n    useEffect(() => {\n        getCurrentProfile();\n    },[]);\n\n    console.log(profile)\n    return loading && profile === null ? (\n        <Spinner />) : \n        (<Fragment>\n            <h1 className=\"large text-primary\">Dashboard</h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-user\" /> Welcome {user && user.name}\n            </p>\n            {profile !== null ? (\n                <Fragment>\n                    <DashboardActions />\n                    <Experience experience={profile.experience}/>\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n                        Create Profile\n                    </Link>\n                </Fragment>\n            )}\n        </Fragment>)\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getCurrentProfile})(Dashboard);\n"]},"metadata":{},"sourceType":"module"}