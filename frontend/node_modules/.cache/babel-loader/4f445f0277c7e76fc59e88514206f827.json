{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { CLEAR_PROFILE, GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, GET_PROFILES, GET_REPOS } from './types'; // Get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    console.log(res.data);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    console.log(res);\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Get profile by Id\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Get github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; //Create or Update Profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Update' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.errors,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.msg;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.msg;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.data.msg,\n        status: error.response.status\n      }\n    });\n  }\n}; // Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //Delete Account & Profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can not be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has benn permanently deleted'));\n    } catch (error) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/actions/profile.js"],"names":["axios","setAlert","CLEAR_PROFILE","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","ACCOUNT_DELETED","GET_PROFILES","GET_REPOS","getCurrentProfile","dispatch","res","get","console","log","data","type","payload","error","msg","response","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","statusText","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {setAlert} from './alert';\n\n\nimport {\n    CLEAR_PROFILE, \n    GET_PROFILE, \n    PROFILE_ERROR, \n    UPDATE_PROFILE,\n    ACCOUNT_DELETED,\n    GET_PROFILES,\n    GET_REPOS\n} from './types';\n\n// Get current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/profile/me');\n        console.log(res.data)\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n    dispatch({type: CLEAR_PROFILE});\n\n    try {\n        const res = await axios.get('/api/profile');\n        console.log(res )\n        dispatch({\n            type: GET_PROFILES,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Get profile by Id\n\nexport const getProfileById = (userId) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/user${userId}`);\n        \n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Get github repos\n\nexport const getGithubRepos = (username) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/profile/github/${username}`);\n        \n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n//Create or Update Profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const res = await axios.post('/api/profile', formData, config);\n\n        dispatch({\n            type: GET_PROFILE,\n            payload: res.data\n        })\n\n        dispatch(setAlert(edit ? 'Profile Update' : 'Profile Created', 'success'));\n\n        if(!edit) {\n            history.push('/dashboard');\n        }\n    } \n    catch (error) {\n        const errors = error.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.errors,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const res = await axios.put('/api/profile/experience', formData, config);\n\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Experience Added', 'success'));\n        history.push('/dashboard');\n    } \n    catch (error) {\n        const errors = error.response.data.msg;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const res = await axios.put('/api/profile/education', formData, config);\n\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        })\n\n        dispatch(setAlert('Education Added', 'success'));\n        history.push('/dashboard');\n    } \n    catch (error) {\n        const errors = error.response.data.msg;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/experience/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Experience Removed', 'success'));\n    } \n    catch (error) {\n        console.log(error)\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.data.msg,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n// Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/profile/education/${id}`);\n\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Education Removed', 'success'));\n    } \n    catch (error) {\n        dispatch({\n            type: PROFILE_ERROR,\n            payload: {\n                msg: error.response.statusText,\n                status: error.response.status\n            }\n        })\n    }\n};\n\n//Delete Account & Profile\n\nexport const deleteAccount = () => async dispatch => {\n    if(window.confirm('Are you sure? This can not be undone!')) {\n        try {\n            await axios.delete('/api/profile');\n    \n            dispatch({type: CLEAR_PROFILE});\n            dispatch({type: ACCOUNT_DELETED});\n    \n            dispatch(setAlert('Your account has benn permanently deleted'));\n        } \n        catch (error) {\n            dispatch({\n                type: PROFILE_ERROR,\n                payload: {\n                    msg: error.response.statusText,\n                    status: error.response.status\n                }\n            })\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}