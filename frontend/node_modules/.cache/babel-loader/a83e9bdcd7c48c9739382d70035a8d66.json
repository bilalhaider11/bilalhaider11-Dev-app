{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/MERN/client/src/components/profile/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back To Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: profile.experience.map(exp => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: exp\n            }, exp._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 63\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No experience credetials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/profile/Profile.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Link","getProfileById","Spinner","ProfileTop","ProfileAbout","ProfileExperience","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","exp","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useEffect, Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\n\n\nconst Profile = ({\n    getProfileById,\n    profile: {profile, loading},\n    auth,\n    match\n}) => {\n    useEffect(()=>{\n        getProfileById(match.params.id);\n    }, [getProfileById, match.params.id]);\n\n\n    return (\n        <Fragment>\n            {profile === null || loading ? <Spinner /> : \n            <Fragment>\n                <Link to=\"/profiles\" className=\"btn btn-light\">\n                    Back To Profiles\n                </Link>\n                {auth.isAuthenticated && auth.loading === false && \n                    auth.user._id === profile.user._id &&(\n                        <Link to=\"edit-profile\" className=\"btn btn-dark\">\n                            Edit Profile\n                        </Link>\n                    )}\n                    <div class=\"profile-grid my-1\">\n                        <ProfileTop profile={profile} />\n                        <ProfileAbout profile={profile} />\n                        <div className=\"profile-exp bg-white p-2\">\n                            <h2 className=\"text-primary\">Experience</h2>\n                            {profile.experience.length > 0 ? (<Fragment>\n                            {profile.experience.map(exp => (\n                                <ProfileExperience \n                                    key={exp._id} \n                                    experience={exp} />\n                            ))}\n                            </Fragment>) : (<h4>No experience credetials</h4>)}\n                        </div>\n                    </div>\n            </Fragment>\n        }\n        </Fragment>)\n}\n\nProfile.propTypes = {\n    getProfileById: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getProfileById})(Profile);\n"]},"metadata":{},"sourceType":"module"}