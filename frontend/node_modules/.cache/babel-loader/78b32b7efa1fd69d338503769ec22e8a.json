{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import Spinner from'../layout/Spinner';import{getPost}from'../../actions/post';import PostItem from'../posts/PostItem';import CommentForm from'./CommentForm';import CommentItem from'./CommentItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Post=function Post(_ref){var getPost=_ref.getPost,_ref$post=_ref.post,post=_ref$post.post,loading=_ref$post.loading,match=_ref.match;useEffect(function(){getPost(match.params.id);},[getPost,match.params.id]);return loading||post===null?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/posts\",className:\"btn\",children:\"Back To Posts\"}),/*#__PURE__*/_jsx(PostItem,{post:post,showActions:false}),/*#__PURE__*/_jsx(CommentForm,{postId:post._id}),/*#__PURE__*/_jsx(\"div\",{className:\"comments\",children:post.comments.map(function(comment){return/*#__PURE__*/_jsx(CommentItem,{comment:comment,postId:post._id},comment._id);})})]});};var mapStateToProps=function mapStateToProps(state){return{post:state.post};};export default connect(mapStateToProps,{getPost:getPost})(Post);","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","connect","Link","Spinner","getPost","PostItem","CommentForm","CommentItem","Post","post","loading","match","params","id","_id","comments","map","comment","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CAEA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,OAAT,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAA8C,IAA5CJ,CAAAA,OAA4C,MAA5CA,OAA4C,gBAAnCK,IAAmC,CAA5BA,IAA4B,WAA5BA,IAA4B,CAAtBC,OAAsB,WAAtBA,OAAsB,CAAZC,KAAY,MAAZA,KAAY,CACvDX,SAAS,CAAC,UAAM,CACZI,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP,CACH,CAFQ,CAEN,CAACT,OAAD,CAAUO,KAAK,CAACC,MAAN,CAAaC,EAAvB,CAFM,CAAT,CAKA,MAAOH,CAAAA,OAAO,EAAID,IAAI,GAAK,IAApB,cACH,KAAC,OAAD,IADG,cAGH,MAAC,QAAD,yBACI,KAAC,IAAD,EAAM,EAAE,CAAC,QAAT,CAAkB,SAAS,CAAC,KAA5B,2BADJ,cAII,KAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,CAAsB,WAAW,CAAE,KAAnC,EAJJ,cAKI,KAAC,WAAD,EAAa,MAAM,CAAEA,IAAI,CAACK,GAA1B,EALJ,cAMI,YAAK,SAAS,CAAC,UAAf,UACKL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkB,SAAAC,OAAO,qBACtB,KAAC,WAAD,EAA+B,OAAO,CAAEA,OAAxC,CAAiD,MAAM,CAAER,IAAI,CAACK,GAA9D,EAAkBG,OAAO,CAACH,GAA1B,CADsB,EAAzB,CADL,EANJ,GAHJ,CAgBH,CAtBD,CA6BA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BV,IAAI,CAAEU,KAAK,CAACV,IADkB,CAAL,EAA7B,CAIA,cAAeR,CAAAA,OAAO,CAACiB,eAAD,CAAkB,CAACd,OAAO,CAAPA,OAAD,CAAlB,CAAP,CAAoCI,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\n\nconst Post = ({getPost, post: {post, loading}, match }) => {\n    useEffect(() => {\n        getPost(match.params.id)\n    }, [getPost, match.params.id]);\n\n\n    return loading || post === null ? (\n        <Spinner />\n    ) : ( \n        <Fragment>\n            <Link to=\"/posts\" className=\"btn\">\n                Back To Posts\n            </Link>\n            <PostItem post={post} showActions={false} />\n            <CommentForm postId={post._id} />\n            <div className=\"comments\">\n                {post.comments.map(comment => (\n                    <CommentItem key={comment._id} comment={comment} postId={post._id} />\n                ))}\n            </div>\n        </Fragment>\n    )\n}\n\nPost.propTypes = {\n    getPost: PropTypes.func.isRequired,\n    post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    post: state.post\n})\n\nexport default connect(mapStateToProps, {getPost})(Post);\n"]},"metadata":{},"sourceType":"module"}