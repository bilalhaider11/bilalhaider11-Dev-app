{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/MERN/client/src/components/profiles/Profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? {\n      abc\n    } : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-connectdevelop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), \"Browse and connect with developers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profiles\",\n        children: profiles.length > 0 ? profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileItem, {\n          profile: profile\n        }, profile._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No profiles found...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/home/aht/Desktop/MERN/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","getProfiles","Spinner","ProfileItem","Profiles","profile","profiles","loading","abc","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAuB,aAAvB;AAEA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACH,EAAAA,WAAD;AAAcI,EAAAA,OAAO,EAAE;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAvB,CAAD,KAAiD;AAAA;;AAC9DT,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBAAO,QAAC,QAAD;AAAA,cACFM,OAAO,GAAG;AAACC,MAAAA;AAAD,KAAH,gBAAW,QAAC,QAAD;AAAA,8BACf;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADe,eAEf;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFe,eAKf;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACKF,QAAQ,CAACG,MAAT,GAAkB,CAAlB,GACGH,QAAQ,CAACI,GAAT,CAAaL,OAAO,iBAChB,QAAC,WAAD;AAA+B,UAAA,OAAO,EAAEA;AAAxC,WAAkBA,OAAO,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,CADH,gBAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,cALe;AAAA;AAAA;AAAA;AAAA;AAAA;AADhB;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CApBD;;GAAMP,Q;;KAAAA,Q;AAsBNA,QAAQ,CAACQ,SAAT,GAAqB;AACjBX,EAAAA,WAAW,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADX;AAEjBT,EAAAA,OAAO,EAAEN,SAAS,CAACgB,MAAV,CAAiBD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BZ,EAAAA,OAAO,EAAEY,KAAK,CAACZ;AADe,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAClBgB,eADkB,EAElB;AAACf,EAAAA;AAAD,CAFkB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { connect} from 'react-redux';\n\nimport {getProfiles} from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\n\n\nconst Profiles = ({getProfiles, profile: {profiles, loading}}) => {\n    useEffect(() => {\n        getProfiles();\n    }, []);\n\n    return <Fragment>\n        {loading ? {abc} : <Fragment>\n            <h1 className=\"large text-primary\">Developers</h1>\n            <p className=\"lead\">\n                <i className=\"fab fa-connectdevelop\" />Browse and connect with developers\n            </p>\n            <div className=\"profiles\">\n                {profiles.length > 0 ? (\n                    profiles.map(profile => (\n                        <ProfileItem key={profile._id} profile={profile} />\n                    ))\n                ) : <h4>No profiles found...</h4>}\n            </div>\n        </Fragment>}\n    </Fragment>\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(\n    mapStateToProps,\n    {getProfiles}\n)(Profiles);\n"]},"metadata":{},"sourceType":"module"}