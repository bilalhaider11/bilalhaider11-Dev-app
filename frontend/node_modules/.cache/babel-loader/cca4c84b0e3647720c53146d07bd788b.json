{"ast":null,"code":"var _jsxFileName = \"/home/aht/Desktop/Dev-app-frontend/src/components/posts/PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostItem = ({\n  auth,\n  addLike,\n  removeLike,\n  deletePost,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  },\n  showActions\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"round-img\",\n        src: avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"post-date\",\n      children: /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"YYYY/MM/DD\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), showActions && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => addLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => removeLike(_id),\n        type: \"button\",\n        className: \"btn btn-light\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${_id}`,\n        className: \"btn btn-primary\",\n        children: [\"Discussion \", ' ', comments.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => deletePost(_id),\n        type: \"button\",\n        className: \"btn btn-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 7\n}, this);\n\n_c = PostItem;\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/home/aht/Desktop/Dev-app-frontend/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","e","length","defaultProps","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport {connect} from 'react-redux';\n\nimport {addLike, removeLike, deletePost} from '../../actions/post';\n\nconst PostItem = ({\n    auth, \n    addLike, \n    removeLike, \n    deletePost,\n    post: {_id, text, name, avatar, user, likes, comments, date},\n    showActions\n}) => <div className=\"post bg-white p-1 my-1\">\n            <div>\n                <Link to={`/profile/${user}`}>\n                    <img\n                    className=\"round-img\"\n                    src={avatar}\n                    alt=\"\"\n                    />\n                    <h4>{name}</h4>\n                </Link>\n            </div>\n            <div>\n                <p className=\"my-1\">\n                    {text}\n                </p>\n                <p className=\"post-date\">\n                    <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n                </p>\n                {showActions && <Fragment>\n                    <button \n                        onClick={e => addLike(_id)} \n                        type=\"button\" \n                        className=\"btn btn-light\"\n                    >\n                        <i className=\"fas fa-thumbs-up\" />{' '}\n                        <span> {likes.length > 0 && (\n                            <span>{likes.length}</span>\n                        )} </span>\n                    </button>\n                    <button \n                        onClick={e => removeLike(_id)} \n                        type=\"button\" \n                        className=\"btn btn-light\"\n                    >\n                        <i className=\"fas fa-thumbs-down\"></i>\n                    </button>\n                    <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n                        Discussion {' '}\n                        {comments.length > 0 && (\n                            <span className='comment-count'>{comments.length}</span>\n                        )} \n                    </Link>\n                    { user === auth.user._id && (\n                        <button  \n                            onClick={e => deletePost(_id)}    \n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                        >\n                            <i className=\"fas fa-times\"></i>\n                        </button>\n                    )}\n                </Fragment>}\n            </div>\n        </div>\n\nPostItem.defaultProps = {\n    showActions: true\n};\n\nPostItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired,\n    addLike: PropTypes.func.isRequired,\n    removeLike: PropTypes.func.isRequired,\n    deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {addLike, removeLike, deletePost})(PostItem);\n"]},"metadata":{},"sourceType":"module"}